.header{
    background-color: #f4f0ea;
    position: fixed;
    width: 100%;
    box-sizing: border-box;
    padding: 10px;
}

.logo{
    height: 105px;
    width: 105px;
}

.bar{
    display: flex;
    justify-content: center;
    text-transform: uppercase;
    font-size: 12px;
    font-weight: 400;
    position: relative;
}

.bar p{
    margin: 0px;
}

.bar a{
    text-decoration: none;
    color: black;
    position: absolute;
    left: 0;
}

.shopContainer{
    display: flex;
    gap: 30px;
    position: absolute;
    right: 0;
}

.el{
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    cursor: pointer;
    position: relative;
    left: 45%;
}

.label{
    position: relative;
    display: flex;
    align-items: center;
    height: 100%;
}

.label p:nth-of-type(2){
    position: absolute;
}

.label p:nth-of-type(2){
    opacity: 0;
}

.shop{
    display: none;
}

.burger{
    width: 22.5px;
    position: relative;
    pointer-events: none;
}

.burger::after, .burger::before{
    content: "";
    height: 1px;
    width: 100%;
    background-color: black;
    position: relative;
    display: block;
    transition: all 1s cubic-bezier(0.76, 0, 0.24, 1);
}

.burger::after{
    top: -4px;
}
.burger::before{
    top: 4px;
}

.burgerActive::after{
    transform: rotate(45deg);
    top: -1px;
}

.burgerActive::before{
    transform: rotate(-45deg);
    top: 1px;
}

@media only screen and (min-width: 600px) {
    .header{
        padding: 20px;
    }
    .bar{
        font-size: 15px;
    }
   
   
}

.close-btn{
    color: black;
}
.menu-bar{
    color: black;

}


/* Initial state */
/* Define keyframes for opening and closing animations */
@keyframes openOpacity {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  @keyframes closeOpacity {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
  
  /* Apply animation to elements */
  .open {
    animation: openOpacity 0.35s forwards;
  }
  
  .closed {
    animation: closeOpacity 0.35s forwards;
  }
  
  